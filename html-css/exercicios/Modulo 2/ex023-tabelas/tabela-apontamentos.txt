# TABELAS

<!-- Criar uma Tag Table, para delimitar a tabela -->

HIERARQUIA DE TABELAS (Simples)

   > TABLE = Tabelas ------------------------------ <table> 
       > TABLE ROW = Linha de Tabela -------------- <tr>
           > TABLE HEADER = Cabeçalho de Tabela --- <th>
               > TABLE DATA = Dado de Tabela ------ <td>

usando o border na tag <table>, ele só vai colocar a borda em volta da tabela e não vai preencher as linhas nem colunas.
> Para preencher a volta dos dados, estilizamos o <td> com a propriedade *border*. Podemos criar a largura com a propriedade *width* e a altura com a *height* e um *padding* para criar o afastamente do texto a borda |
> Para separar as linhas ou juntar, usamos a propriedade *border-collapse: separete*, ele serpara as linhas e <border-callapse: collapse>, ele vai juntar as linhas.
> Para o HTML5, as tags de fechamento do *tr e td*, não são obrigatórias. A hieraquia da tabela tem que estar na ordem certa.

<style>
        body {
            font-family: Arial, Helvetica, sans-serif;
        }
   
        table {
            border: 4px solid red;
            width: 400px;
            height: 150px;
            border-collapse: collapse;
        }

        tr.linha {
            background-color: grey;
        }

        td {
            border: 1px solid black;
            padding: 8px;
        }
    </style>

body

<table>
        <tr>  <!-- Primeira Linha -->
            <td>A1</td>
            <td>B1</td>
            <td>C1</td>
        </tr>
        
        <tr class="linha"> <!-- Segunda Linha -->
            <td>A2</td>
            <td>B2</td>
            <td>C2</td>
        </tr>
</table>


ALINHAMENTO

* Alinhamento Horizontal dos elementos na tabela, para isso usamos a propriedade <text-align: left, center, right>
* Alinhamento vertical dos elementos na tabela, para isso usamos a propriedade <vertical-align: top, bottom, middle>

ANATOMIA DE TABELAS GRANDES

      > CAPTION = Legenda da Tabela
        > TABLE = Tabelas ------------------ <table> 
          > THEAD = Cabeça da tabela ----- <tr>, <td>, <th>
          > TBODY = Corpo da Tabela ------ <tr>, <td>, <th>
          > TFOOT = Rodapé da Tabela ----- <tr>, <td>, <th>

<!-- scope (escopo): col é para dizer se os dados estão na mesma coluna, e scope: row, é para dizer se os dados estão na mesma linha -->

	<th scolpe="col" style="width: 50px;">População</th>

A pseudo-classe :nth-child em CSS é usada para selecionar elementos com base em sua posição em relação aos irmãos diretos dentro de seu elemento pai. Essa pseudo-classe aceita uma fórmula matemática (an + b), onde n representa a posição do elemento. Por exemplo, você pode usar :nth-child(2) para selecionar todos os elementos que são o segundo filho direto de seu pai, :nth-child(odd) para selecionar os elementos ímpares, e assim por diante.

	tbody > tr:nth-child(odd) { /* 2n+1 */
            background-color: white;
        }

> Selecionar o segundo elemento: p:nth-child(2) {}
> Selecionar elementos ímpares: li:nth-child(odd) {}
> Selecionar elementos pares: div:nth-child(even) {}
> Selecionar a cada terceiro elemento a partir do segundo: ul li:nth-child(3n + 2) {}

Lembre-se de que a contagem de elementos começa do 1. Se você quiser selecionar o primeiro elemento, pode usar :nth-child(1) ou simplesmente :first-child. Essa pseudo-classe é útil quando você precisa estilizar elementos específicos com base em sua posição no documento HTML.


CABEÇALHO FIXO EM TABELAS GRANDES

/* para fazer o cabeçalho ficar fixo conforme vamos scrollando para baixo, primeiro tenho que manter a relatividade da tabela, usando a própriedade > position: relative. */

        table {
            width: 500px;
            border-collapse: collapse;
            position: relative;
        }

De seguida configurar o thead para manter ele fixo. Então temos que usar três recursos para permitir a mesma rolagem fixa;

	thead > tr > th {
	    position: sticky;
	    top: 0;
	    background-color: #383838 /* o mesmo que o background color do thead*/
	}












































